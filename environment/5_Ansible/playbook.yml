- name: Configure EC2 for Jenkins
  hosts: public_0
  become: yes

  tasks:
    - name: Wait when instance will be ready
      wait_for:
        host: "{{ ansible_host }}"
        port: 22
        delay: 5
        timeout: 300
        state: started

    - name: Change hostname
      shell: hostnamectl set-hostname jenkins

    - name: yum update
      yum:
        name: "*"
        state: latest

    - name: Add the jenkins repo
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import a key file from jenkins-ci
      ansible.builtin.rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key

    - name: yum update
      yum:
        name: "*"
        state: latest

    - name: Install java
      shell: amazon-linux-extras install java-openjdk11 -y

    - name: Install jenkins
      yum:
        name: jenkins
        state: latest

    - name: Start Jenkins
      ansible.builtin.systemd:
        enabled: yes
        name: jenkins
        state: started

    - name: Save Jenkins login password to variable
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_password
    - name: Your Jenkins login password
      debug: msg={{ jenkins_password.stdout }}

    - name: Install Jenkins plugins
      community.general.jenkins_plugin:
        name: "{{ item }}"
        url_username: "admin"
        url_password: "{{ jenkins_password.stdout }}"
        url: http://localhost:8080
        timeout: 90
      with_items:
        - git
        - github
        - maven-plugin
        - deploy
        - publish-over-ssh

    - name: Install Git
      package:
        name: git
        state: present

    - name: Install Maven
      package:
        name: maven
        state: present

- name: Configure EC2 for Docker
  hosts: public_1
  become: yes
  vars:
    username: dockercicd
    password: "!MoyCICD1234"

  tasks:
    - name: Change hostname
      shell: hostnamectl set-hostname docker
    - name: Update server
      shell: yum update -y

    - name: install Docker
      package:
        name: docker
        state: present
    - name: Enable Docker service at boot time
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add new user
      user:
        name: "{{ username }}"
        password: "{{ password }}"
        state: present
        update_password: on_create
    - name: Add user to docker group
      user:
        name: "{{ username }}"
        groups: docker
        append: yes

    - name: Create directory for project
      file:
        path: "/opt/docker"
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Change SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^(.*)PasswordAuthentication no(.*)$"
        line: "PasswordAuthentication yes"
      notify: Restart ssh

  handlers:
    - name: Restart ssh
      shell: service sshd restart

- name: Configure EC2 for Ansible
  hosts: public_2
  become: yes
  vars:
    username: ansiblecicd
    password: "!MoyCICD1234"

  tasks:
    - name: Change hostname
      shell: hostnamectl set-hostname ansible
    - name: Update server
      shell: yum update -y
    - name: Install Ansible
      shell: amazon-linux-extras install ansible2 -y

    - name: Install Docker
      package:
        name: docker
        state: present
    - name: Enable Docker service
      service:
        name: docker
        state: started
        enabled: yes
    - name: Solve error Got permission denied while trying to connect to the Docker daemon socket
      command: chmod 777 /var/run/docker.sock
      become: yes
      become_user: root

    - name: Add new user
      user:
        name: "{{ username }}"
        password: "{{ password }}"
        state: present
        update_password: on_create
    - name: Add user to docker group
      user:
        name: "{{ username }}"
        groups: docker
        append: yes
    - name: Allow ansible user run command with sudo
      lineinfile:
        path: /etc/sudoers
        insertafter: "^(.*)## Allows people in group wheel to run all commands(.*)$"
        line: "{{ username }}  ALL=(ALL) ALL"

    - name: Create directory for project
      file:
        path: "/opt/docker"
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Change SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^(.*)PasswordAuthentication no(.*)$"
        line: "PasswordAuthentication yes"
      notify: Restart ssh

  handlers:
    - name: Restart ssh
      shell: service sshd restart
